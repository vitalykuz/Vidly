@using Vidly.Models
@model Vidly.ViewModels.CustomerFormViewModel

@{
    ViewBag.Title = "NewCustomer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>

@*
  We add "using" because it adds a closing </form> tag. 
*@
@using (Html.BeginForm("Save", "Customers"))
{
    // this adds a list of all errors at the top of the form
    @Html.ValidationSummary()
    // this adds just a message instead of the list of all properties
    //@Html.ValidationSummary(true, "Please fix the following errors")
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership Type" , new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Birthday)
        @Html.TextBoxFor(m => m.Customer.Birthday, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Birthday)
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter) Is Subscribed to Newsletter?
        </label>
    </div>
    // we need to add hidden field in order to get Customer ID to use it in ActionResult Save(Customer customer)
    @Html.HiddenFor(m => m.Customer.Id);
    //this adds a token on a client. It will add a token as a hidden form and it also adds a cookie to client
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}

@*
   We add it in order to use JQuery validation. 
    We need to reference it. It actually included in BundleConfig.cs. Copy address from there as 
    an argument to Render.
*@
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
